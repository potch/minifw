let e=0,t=0;const n=document,r=e=>e(),a=e=>"object"==typeof e,l=(e,t)=>e.forEach(t),c=(e,t)=>{for(let[d,o]of Object.entries(t||{}))e.nodeType?(n=e,r=d,l=o,l?.call||a(l)||r in n?a(n[r])?c(n[r],l):n[r]=null===l?"":l:null===l||!1===l&&"-"!=r[4]?n.removeAttribute(r):n.setAttribute(r,l)):a(e[d])&&a(o)?c(e[d],o):e[d]=o;var n,r,l;return e},d=(e=new Set)=>[(...t)=>l(e,(e=>e(...t))),t=>(e.add(t),_=>e.delete(t))],o=(n,[r,a]=d())=>({set val(e){n!==e&&(n=e,t?t.add(r):r())},get val(){return e&&e.add(this),n},peek:_=>n,watch:a}),u=t=>{let n,a=0,c=_=>{a||(a=1,t(),a=0)};return e=new Set,t(),n=[...e].map((e=>e.watch(c))),e=0,_=>l(n,r)};export default{$:(e,t=n)=>t.querySelector(e),assign:c,dom:(e,t,...r)=>{let a=c(n.createElement(e),t);return a.append(...r),a},on:(e,...t)=>(e.addEventListener(...t),_=>e.removeEventListener(...t)),event:d,signal:o,computed:e=>{let t=o();return u((_=>t.val=e())),{get val(){return t.val},peek:t.peek,watch:t.watch}},effect:u,batch:e=>{t=new Set,e(),l(t,r),t=0}};
